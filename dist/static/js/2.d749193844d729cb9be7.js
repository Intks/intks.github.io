webpackJsonp([2],{"8X8m":function(t,e){},S7VP:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n("fVjI"),s={name:"NoteList",data:function(){return{noteInfoDTOList:r.a}},methods:{seeMore:function(t){this.$router.push("/note/"+t)}}},i={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"note-list"},[n("div",{staticClass:"note-title"},[t._v("個人前端筆記")]),t._v(" "),t._l(t.noteInfoDTOList,function(e){return n("div",{key:e.id,staticClass:"note-list-item"},[n("router-link",{staticClass:"item-link-title",attrs:{to:"/note/"+e.id}},[t._v(t._s(e.noteTitle))]),t._v(" "),n("div",{staticClass:"info-block"},[n("div",{staticClass:"date"},[t._v("釋出日："+t._s(e.date))]),t._v(" "),n("div",{staticClass:"category"},[t._v("分類："+t._s(e.category))])]),t._v(" "),n("div",{staticClass:"note-content",domProps:{innerHTML:t._s(e.noteContent.substr(1,100))}}),t._v(" "),n("div",{staticClass:"btn-more",on:{click:function(n){return t.seeMore(e.id)}}},[t._v("閱讀更多")])],1)})],2)},staticRenderFns:[]};var o=n("VU/8")(s,i,!1,function(t){n("8X8m")},"data-v-5497f463",null);e.default=o.exports},fVjI:function(t,e,n){"use strict";n.d(e,"a",function(){return r});var r=[{id:0,date:"2019-02-19",noteTitle:"JS 常用Str, Arr函數",noteContent:"常用的String函數<br>\n    concat() – 將兩個或多個字符的文本組合起來，返回一個新的字符串。<br>\n    indexOf() – 返回字符串中一個子串第一處出現的索引。如果沒有匹配項，返回 -1 。<br>\n    charAt() – 返回指定位置的字符。<br>\n    lastIndexOf() – 返回字符串中一個子串最後一處出現的索引，如果沒有匹配項，返回 -1 。<br>\n    match() – 檢查一個字符串是否匹配一個正則表達式。<br>\n    substr() 函數 -- 返回從string的startPos位置，長度為length的字符串<br>\n    substring() – 返回字符串的一個子串。傳入參數是起始位置和結束位置。<br>\n    slice() – 提取字符串的一部分，並返回一個新字符串。<br>\n    replace() – 用來查找匹配一個正則表達式的字符串，然後使用新字符串代替匹配的字符串。<br>\n    search() – 執行一個正則表達式匹配查找。如果查找成功，返回字符串中匹配的索引值。否則返回 -1 。<br>\n    split() – 通過將字符串劃分成子串，將一個字符串做成一個字符串數組。<br>\n    length – 返回字符串的長度，所謂字符串的長度是指其包含的字符的個數。<br>\n    toLowerCase() – 將整個字符串轉成小寫字母。<br>\n    toUpperCase() – 將整個字符串轉成大寫字母。<br>\n    常用的Array函數<br>\n    concat() 連接兩個或更多的數組，並返回結果。<br>\n    join() 把數組的所有元素放入一個字符串。元素通過指定的分隔符進行分隔。<br>\n    pop() 刪除並返回數組的最後一個元素。  <br>\n    shift() 刪除並返回數組的第一個元素<br>\n    push() 向數組的末尾添加一個或更多元素，並返回新的長度。<br>\n    unshift() 向數組的開頭添加一個或更多元素，並返回新的長度。<br>\n    reverse() 顛倒數組中元素的順序。<br>\n    slice() 從某個已有的數組返回選定的元素<br>\n    sort() 對數組的元素進行排序<br>\n    splice() 刪除元素，並向數組添加新元素。<br>\n    toSource() 返回該對象的源代碼。<br>\n    toString() 把數組轉換為字符串，並返回結果。<br>\n    toLocaleString() 把數組轉換為本地數組，並返回結果。<br>\n    valueOf() 返回數組對象的原始值<br>\n    ",category:"JavaScript"},{id:1,date:"2019-02-19",noteTitle:"JavaScript 設置 css樣式的幾種方式",noteContent:"/* 1.直接設置style屬性 */ element.style.height = '100px’; <br>\n    /* 2.直接設置屬性 */ element.setAttribute('height', '100px’);<br>\n     /* 3.使用setAttribute 設置 style屬性 */ element.setAttribute('style', 'height: 100px !important’);<br>\n     /* 4.使用setProperty設置屬性，通過第三個參數設置important */ element.style.setProperty('height', '300px', 'important'); <br>\n    /* 5.設置cssText */ element.style.cssText += 'height: 100px !important';<br>\n    ",category:"JavaScript"}]}});
//# sourceMappingURL=2.d749193844d729cb9be7.js.map